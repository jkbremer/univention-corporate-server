<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
	"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
	<!ENTITY % extensions SYSTEM "../stylesheets/macros.ent" >
	<!ENTITY % entities SYSTEM "../stylesheets/macros-en.ent" >
	%extensions;
	%entities;
]>
<book lang="en" id="installation-4.4">
<bookinfo>
  <title>Univention Corporate Server</title>
  <subtitle>Extended installation documentation</subtitle>
</bookinfo>

<chapter id="appliance:use">
  <title>Using a UCS appliance</title>

  <para>
	In addition to the traditional installation, there is also the possibility of providing UCS via
	an appliance image. These appliance images can be used both for simple commissioning in a
	virtualization solution such as VMware and for providing a cloud instance.
  </para>

  <para>
	Appliances can be created with minimal effort. This is described in <xref
	linkend="appliance:create"/>.
  </para>

  <para>
	Whilst some of the settings can be preconfigured globally in the image, it is still necessary
	for the end user to make final adjustments to the configuration, e.g., to set the computer name
	or the domain used. For this reason, a basic system is installed for the appliance image and a
	component set up, which then allows the end user to finalize the configuration. Alternatively,
	the configuration can also be performed automatically without user interaction. This is
	described in <xref linkend="appliance:use:auto"/>.
  </para>

  <para>
	The interactive configuration can be performed in two ways:

	<itemizedlist>
	  <listitem><simpara>
		A graphic interface starts on the system, in which the web browser Firefox is started in
		full-screen mode and automatically accesses the configuration URL. This option is
		particularly suitable for images in virtualization solutions.
	  </simpara></listitem>

	  <listitem><simpara>
		The configuration can also be performed directly via an external web browser. In this case,
		the system's IP address must be known to the user (e.g., if it has been notified to him in
		advance in the scope of the provision of a cloud image).
	  </simpara></listitem>

	</itemizedlist>
  </para>

  <para>
	In the scope of the initial configuration, the user can change the following settings in the
	default setting:

	<itemizedlist>
	  <listitem><simpara>
		Selection of the language, time zone and keyboard layout
	  </simpara></listitem>

	  <listitem><simpara>
		Configuration of the network settings
	  </simpara></listitem>

	  <listitem><simpara>
		Setup of a new UCS domain or joining a UCS or Microsoft Active Directory domain
	  </simpara></listitem>

	  <listitem><simpara>
		Software selection of UCS key components. The user can install software from other
		vendors at a later point in time via the Univention App Center.
	  </simpara></listitem>
	</itemizedlist>
  </para>

</chapter>

<chapter id="appliance:create">
  <title>Creating a UCS appliance/cloud image</title>

  <section id="appliance:intro">
	<title>Introduction</title>

	<para>
	  This article describes how to set up an appliance based on UCS 4.3. This type of appliance can
	  also be used to provide preconfigured instances as a cloud service provider. The
	  creation of images for typical virtualization solutions is another possible application
	  scenario, see <xref linkend="appliance:create:virt"/>.
	</para>

  </section>

  <section id="appliance:installbase">
	<title>Performing the basic installation</title>

	<para>
	  The basic installation is performed using the standard UCS installer. Further information on
	  the individual options can be found in the UCS manual. The installation should be performed in
	  a virtualization solution. In this example, the installation is performed in UVMM. A qcow2
	  image should be selected for the hard drive for the virtual machine.  Qcow2 images can be
	  converted to different virtualization formats such as VirtualBox or VMware using a tool
	  provided by Univention, see <xref linkend="appliance:create:virt"/>.
	</para>

	<para>
	  The following settings are configured for the basic image:

	  <itemizedlist>
		<listitem><simpara>
		  The installation language can be selected as required. The locale of the system is set
		  based on the selected language. If you want to be able to use the appliance in more than
		  one language, you can add another locale at a later point in time.
		</simpara></listitem>

		<listitem><simpara>
		  A preselection is made for the time zone which is then adapted subsequently by the users
		  of the appliance.
		</simpara></listitem>

		<listitem><simpara>
		  The keyboard layout is only relevant for local logins; it is not important for the web-based
		  configuration.
		</simpara></listitem>

		<listitem><simpara>
		  A configuration via DHCP is the most practical presetting for appliance images. The
		  Univention Installer attempts to perform a DHCP request in the scope of the network
		  configuration. The network configuration is only performed via DHCP if this is successful,
		  i.e., an IP address must be assigned to the appliance for the duration of the setup. This
		  can be done with an <emphasis>IP managed client</emphasis> object in the &ucsUMC;.
		</simpara></listitem>

		<listitem><simpara>
		  In the next step, the initial password is set for the root user. This root password is
		  changed by the end user during the commissioning of the appliance image.
		</simpara></listitem>

		<listitem><simpara>
		  The partitioning can be performed as required, e.g., by using an LVM. For an image that
		  will be used in a cloud setup, a single root partition should be used. This allows growing
		  the root partition based on the selected instance disk size.
		</simpara></listitem>
	  </itemizedlist>
	</para>

	<para>
	  Once the basic installation is complete, a dialogue is shown in which you can select whether
	  to create a new UCS domain or join an existing domain. To create the appliance, <keycombo action="simul"><keycap function="control">Control</keycap><keycap>Q</keycap></keycombo>
	  must be pressed at this point to interrupt the process. The installation continues for a short
	  period of time, during which the <guimenu>Starting Univention System Setup</guimenu> message
	  appears and the systems then restarts.
	</para>

	<para>
	  The installation of the basic image is now complete. Following a reboot, the user of the
	  appliance is shown the dialogue for adjusting the configuration, see <xref
	  linkend="appliance:use"/>.
	</para>

	<para>
	  In most cases, the appliance needs to be preconfigured with a certain selection of
	  software. The installation is usually performed via the Univention App Center, which, however,
	  is not yet available at this point in time. The installation is thus performed via the command
	  line. UCS standard components can be installed using the corresponding package names, e.g.

	  <programlisting language="sh">
univention-install univention-printserver
	  </programlisting>

	  Packages from the Univention App Center are installed with the command
	  <command>univention-add-app</command> once a valid license is available.
	  The ID of an application can be retrieved with the command
	  <command>univention-add-app --list</command>:

	  <programlisting language="sh">
univention-add-app -l APPID
	  </programlisting>
	</para>

	<para>
	  The system now needs to be shut down cleanly without filesystems still being mounted.
	</para>

	<para>
	  The qcow2 image (i.e., the hard drive of the virtual machine) is now copied. If the
	  <emphasis>default</emphasis> storage pool of UVMM was used, the image is stored in the
	  directory <filename class="directory">/var/lib/libvirt/images/</filename>.
	</para>

	<para>
	  Additional steps are required if the image is to be used in Amazon EC2
	  (see <xref linkend="appliance:create:ec2"/>), OpenStack (see <xref
	  linkend="appliance:create:openstack"/>) or as a VMware / VirtualBox appliance (see <xref
	  linkend="appliance:create:virt"/>).
	</para>

	<section id="appliance:create:ec2">
	  <title>Providing an image for Amazon EC2</title>
	  <para>
		The following adjustments need to be made for an image that is to be used in Amazon
		EC2.
	  </para>

	  <para>
		  Amazon EC2 uses a PyGrub version which can only read the data format from GRUB 1 (<filename>menu.lst</filename>),
		whilst UCS uses GRUB 2 as the bootloader. The following &ucsUCR; variables can be
		used to generate the GRUB configuration in this format additionally. The bootloader
		configuration is also adapted:

		<programlisting language="sh"><![CDATA[
DEV='/dev/xvda' GRUB='(hd0)'
grub-mkdevicemap ||
	echo "${GRUB} ${DEV}" >/boot/grub/device.map
append="$(ucr get grub/append |
	sed -re "s|/dev/sda|${DEV}|g;s|(no)?splash||g")"
xargs -d'\n' ucr set <<__UCR__
grub/append=${append}
grub/boot=${DEV}
grub/root=${DEV}1
grub/grub1root=${GRUB}
grub/bootsplash=no
grub/quiet=no
__UCR__
update-initramfs -uk all
update-grub
univention-grub-generate-menu-lst
]]></programlisting>
	  </para>

	  <para>
		The initial login to the EC2 instance is performed via a SSH host key. To prevent SSH logins
		from occurring with the default root password of the standard image during commissioning of
		the instance, the initial root password is removed. The following &ucsUCR; variable configures this start mode:

		<programlisting language="sh">
usermod -p \* root
ucr set server/amazon=true
		</programlisting>
	  </para>

	  <para>
		  The name server should be set; in this example to <systemitem class="service">OpenDNS</systemitem>. Additionally, the timeout when
		  waiting for a DHCP request answer is lowered.

		<programlisting language="sh">
ucr set nameserver1=208.67.222.222 dns/forwarder1=208.67.222.222
ucr unset nameserver2 nameserver3
ucr unset dns/forwarder2 dns/forwarder3
ucr set interfaces/eth0/type=dhcp dhclient/options/timeout=12
		</programlisting>
	  </para>
	</section>

	<section id="appliance:create:openstack">
	  <title>Providing an image for OpenStack</title>
	  <para>
		The provisioning for OpenStack images occurs via Cloud-Init (see
		<xref linkend="appliance:use:cloudinit"/>).
		Cloud-Init is a standardized solution for configuration of an image. Cloud-Init checks a
		range of data sources for an existing configuration. The <package>univention-cloud-init</package>
		package must be installed to prepare an image for provisioning via Cloud-Init:

		<programlisting language="sh">
univention-install univention-cloud-init
		</programlisting>
	  </para>

	  <para>
		The local <application>Firefox</application> session should not be started when running as an OpenStack instance.
		<programlisting language="sh">
ucr set system/setup/boot/start=false
		</programlisting>
	  </para>

	  <para>
		The initial login to the OpenStack instance is performed via a SSH host key. To prevent SSH logins
		from occurring with the default root password of the standard image during commissioning of
		the instance, the initial root password is removed.
		<programlisting language="sh">
usermod -p \* root
		</programlisting>
	  </para>
	</section>

	<section id="appliance:create:virt">
	  <title>Providing an image for VMware/VirtualBox</title>
	  <para>
		  Virtualization images for <application>VirtualBox</application>, <application>VMware Player</application> and <application>VMware ESX</application> can also be created on
		the basis of the qcow2 images above. To this end, Univention offers a tool, which can be
		installed via the <package>generate-appliance</package> package (the integration in UCS 4.3
		can be followed via <u:bug>37137</u:bug>).
	  </para>

	  <para>
		The <command>generate_appliance</command> tool must be started and the qcow2
		image selected with the parameter <option>-s</option>:

		<programlisting language="sh">
generate_appliance -s appliance.qcow2
		</programlisting>

		The virtual machine is assigned one CPU and a gigabyte of RAM as standard. If the appliance
		has a higher storage or CPU power requirement, the parameter <option>-m</option> can be
		used to specify a different quantity of RAM in megabytes and <option>-c</option> can be
		used to assign a different number of CPUs.

		The parameters <option>--vendor</option> and <option>--product</option> can be used
		to specify a vendor and product name.
	  </para>

	  <para>
		In the default setting, three different virtualization images are generated from the qcow2
		image. The generation for a type can be suppressed using the respectively given option:

		<itemizedlist>
		  <listitem><simpara>
			Zipped VMware compatible images (e.g. for <application>VMware Player</application>), can be suppressed with <option>--no-vmware</option>
		  </simpara></listitem>

		  <listitem><simpara>
			VirtualBox OVA image, can be suppressed with <option>--no-ova-virtualbox</option>
		  </simpara></listitem>

		  <listitem><simpara>
			<application>VMware ESX</application> OVA image, can be suppressed with <option>--no-ova-esxi</option>
		  </simpara></listitem>
		</itemizedlist>
	  </para>
	</section>
  </section>

  <section id="appliance:use:auto">
	<title>Automatic configuration of an appliance</title>
	<para>
	  Instead of an interactive configuration of the appliance by the user,
	  it can also be performed automatically. The automatic configuration can either be performed
	  via <application>cloud-init</application> (a general tool for the provision of cloud images) or a Univention appliance
	  mode profile file.
	</para>

	<section id="appliance:use:auto:profile">
	  <title>Automatic configuration with a UCS appliance mode profile file</title>

	  <para>
		Automatic configuration with the UCS appliance mode requires creating a profile file
		<filename>/var/cache/univention-system-setup/profile</filename>. Example configuration:

		<programlisting>
hostname="ucs"
domainname="testdom.local"
windows/domain="TESTDOM"
ldap/base="dc=testdom,dc=local"
root_password="univention"

locale/default="de_DE.UTF-8:UTF-8"
components="univention-s4-connector univention-samba4 univention-nagios-server"
packages_install="univention-s4-connector univention-samba4 univention-nagios-server"
packages_remove=""

server/role="domaincontroller_master"

interfaces/eth0/type=""
interfaces/eth0/address="192.0.2.2"
interfaces/eth0/netmask="255.0.0.0"
interfaces/eth0/network="10.0.0.0"
interfaces/eth0/broadcast="10.255.255.255"
dns/forwarder1="192.0.2.2"
gateway="192.0.2.1"
		</programlisting>

		If <envar>interfaces/eth0/type</envar> is set to <literal>dynamic</literal>, DHCP is
		used for the network configuration.
	  </para>

	  <para>
		Then the <command>/usr/lib/univention-system-setup/scripts/setup-join.sh</command> tool
		needs to be run once. Then Apache and the UMC server need to be restarted:

		<programlisting language="sh">
invoke-rc.d apache2 restart
invoke-rc.d univention-management-console-server restart
		</programlisting>
	  </para>
	</section>

	<section id="appliance:use:cloudinit">
	  <title>Automatic configuration of an appliance with Cloud-Init</title>
	  <para>
		Cloud-Init works on a configuration file in the cloud configuration format.
		The configuration file is provided by the respective cloud service; the type of provision
		differs from cloud solution to cloud solution. It is currently only possible to provide a
		&ucsMaster;.
	  </para>

	  <para>
		The configuration file may be adapted for different scenarios. To setup a domain,
		the <literal>ucs_setup</literal> section is required. Note that the supplied
		<literal>ldap_base</literal> is used in other configuration sections as well.
	  </para>

	  <para>
		The following includes an example file with which a &ucsMaster; can be provided. In
		addition, several files are generated on the system: the UCS license to be installed and a file
		with the apps to be installed from the Univention App Center.
		The license in this example is the default <emphasis>core edition license</emphasis>.
		More information about requesting a proper license can be found in <xref linkend="appliance:license"/>.
	  </para>

	  <para>
		Two example hook scripts are generated which are called after setup is finished:
		One calls <command>wget</command> for a given URL, which could be used to signal an external service that the
		provisioning of the instance is done. The other is an example <command>udm</command>
		call to register an OpenStack connection in UVMM.

		<programlisting language="yaml">
#cloud-config
#
ucs_setup:
  hostname: myucsmaster
  domainname: ucs.local
  windowsdomain: UCS
  ldap_base: dc=ucs,dc=local
  rootpassword: univention
  defaultlocale: de_DE.UTF-8:UTF-8
  components:
  packages_install: univention-virtual-machine-manager-daemon
  packages_remove:
write_files:
-   content: |
      dn: cn=admin,cn=license,cn=univention,dc=ucs,dc=local
      objectClass: top
      objectClass: univentionLicense
      objectClass: univentionObject
      univentionObjectType: settings/license
      univentionLicenseEndDate: unlimited
      univentionLicenseModule: admin
      cn: admin
      univentionLicenseBaseDN: UCS Core Edition
      univentionLicenseUsers: unlimited
      univentionLicenseServers: unlimited
      univentionLicenseManagedClients: unlimited
      univentionLicenseCorporateClients: unlimited
      univentionLicenseVirtualDesktopUsers: 0
      univentionLicenseVirtualDesktopClients: 0
      univentionLicenseSupport: 0
      univentionLicensePremiumSupport: 0
      univentionLicenseVersion: 2
      univentionLicenseType: UCS
      univentionLicenseSignature: ZjofoUmITUqpyF5q+AfE1i6EwsKXGWYnkh3JLJH3/bXqvD26nG
       aLa+cpcr6g9Stkx2Lslh1feGCpsdvowkA3T+SFtPHSX0Fds78QgyatoiFlA6mbbtMf3ABbMfW9Glt
       IZBbxxDFD+hMO/7yOHwaFZM3xb1I2ToJ1D2+xvOxrZe2SCZd4KJIXpupnmJnAC/D4Y9iqHPytVPU3
       QlI6zXnGU5q47RN/tdXLTpV7mHoiXRWh282TNOlnEiiQxwiQ4u2ghWE1x/EWY/CXvZm0PQcsFqGyB
       v72WdEUOex1Yuf3BgZ7QfLOQ2XIv6KPKCyYqZqlSNp8Xk+IpKjDqL+aq0oyeg==
    owner: root:root
    path: /var/cache/univention-system-setup/license
    permissions: '0400'
-   content: |
      simplesamlphp
      adconnector
    owner: root:root
    path: /var/cache/univention-system-setup/installapps
    permissions: '0400'
-   content: |
      #!/bin/sh
      wget http://myURL/page?myparam=myValue
    owner: root:root
    path: /usr/lib/univention-system-setup/appliance-hooks.d/90_wget_url
    permissions: '0755'
-   content: |
      #!/bin/sh
      udm uvmm/cloudconnection create --ignore_exists \
      --position="cn=CloudConnection,cn=Virtual Machine Manager,dc=ucs,dc=local" \
      --set name="OpenStack" \
      --set type="cn=OpenStack,cn=CloudType,cn=Virtual Machine Manager,dc=ucs,dc=local" \
      --set includeUCSimages=0 \
      --append parameter="username demouser" \
      --append parameter="password password" \
      --append parameter="cloudtype OpenStack" \
      --append parameter="auth_url http://192.0.2.1:5000" \
      --append parameter="auth_version 2.0_password" \
      --append parameter="service_type compute" \
      --append parameter="service_name nova" \
      --append parameter="tenant demotenant" \
      --append parameter="service_region regionOne"
      invoke-rc.d univention-virtual-machine-manager-daemon restart
    owner: root:root
    path: /usr/lib/univention-system-setup/appliance-hooks.d/80_add_uvmm_connection
    permissions: '0755'
		</programlisting>
	  </para>

	  <para>
		The file with the apps to be installed contains a list of IDs of applications from the
		Univention App Center, see <xref linkend="appliance:installbase"/>. The list in the example
		above installs the Univention AD Connector and the SAML	integration on the provided &ucsMaster;
	  </para>
	</section>

	<section id="appliance:license">
	  <title>License management in cloud instances</title>
	  <para>
		In the default installation, a UCS installation has a <emphasis>core edition license</emphasis>.
		An updated license from Univention is required in order to use the App Center. For standard installations
		it is sent to the user by e-mail and then set up in the &ucsUMC;.
	  </para>

	  <para>
		Cloud service providers have the possibility of retrieving UCS licenses via an API, i.e., if
		a new instance is to be created for a customer, the license can be retrieved via the API and
		then installed in the provided instance directly.
	  </para>

	  <para>
		Access to the license server requires a user name and a password. These can be requested
		from Univention at <email>sales@univention.de</email>. In this document,
		<uri>https://license.univention.de/shop/example/</uri> is used as an example URL for the
		license server.
	  </para>

	  <section id="appliance:license:api">
		<title>API for retrieving UCS licenses</title>
		<para>
		  The licenses are retrieved via HTTPS from the Univention license server
		  <uri>license.univention.de</uri>. The retrieval can be performed completely with
		  <command>wget</command>.
		</para>

		<para>
		  Firstly, a session with the license server must be opened, in this case with the user name
		  <systemitem class="username">univention</systemitem> and the password <literal>secret</literal> as an
		  example. It is also possible to request more than one license in one session.

		  <programlisting language="sh">
wget --keep-session-cookies --save-cookies cookie.db --load-cookies \
 cookie.db --post-data='username=univention&amp;password=secret' \
 https://license.univention.de/shop/example/
		  </programlisting>
		</para>

		<para>
			A license can also be ordered with a POST request via <command>wget</command>. Please note that special
			characters such as blank spaces must be escaped in URL-encoded syntax, see
			<uri>https://en.wikipedia.org/wiki/Percent-encoding</uri> for details.
		</para>

		<programlisting language="sh">
wget --keep-session-cookies --save-cookies cookie.db --load-cookies cookie.db \
--post-data='kundeEmail=customer@example&amp;'\
'kundeUnternehmen=New%20Customern&amp;'\
'EndDate=27.11.2015&amp;'\
'BaseDN=dc%3Ddrei%2Cdc%3Dzwei%2Cdc%3Dtest&amp;'\
'Servers=0&amp;'\
'Support=0&amp;'\
'PremiumSupport=0&amp;'\
'Users=100&amp;'\
'ManagedClients=0&amp;'\
'CorporateClients=0&amp;'\
'VirtualDesktopUsers=0&amp;'\
'VirtualDesktopClients=0&amp;'\
'Type=UCS' \
https://license.univention.de/shop/example/order
		</programlisting>

		<para>
		  If the order is successful, the return code 202 is returned. The HTML data includes the tag
		  <varname>orderid</varname>, which identifies the order number of a successful order:
		</para>

		<screen>
...
&lt;span id="orderid"&gt;21&lt;/span&gt;
...
		</screen>

		<para>
		  If the order fails, a return code <errorcode>4xx</errorcode> is returned and the <varname>details</varname> tag
		  includes additional information, e.g.:
		</para>

		<screen>
...
&lt;span id="details"&gt;Not a valid date: u'27.11.201'&lt;/span&gt;
...
		</screen>

		<para>
		  Should it not be possible to process an order due to a server error, 5xx is output as the
		  return code. The order can then be repeated at a later point in time.
		</para>

		<para>
		  Following ordering of a license, it takes a few seconds before the license is
		  generated. It can then be retrieved in LDIF format using the order number. If the request
		  above returns e.g. the order number 465, the file name is thus <filename>465.ldif</filename>.
		  The request specified below waits for the availability of the license for up to sixty seconds:

		  <programlisting language="sh">
wget --keep-session-cookies --save-cookies cookie.db --load-cookies cookie.db \
https://license.univention.de/shop/example/orders/465.ldif
		  </programlisting>

		</para>

	  </section>
	</section>
  </section>

</chapter>

<chapter id="profile:intro"><title>Profile-based installation</title>
	<para>
		In addition to the interactive installation described in the <biblioref linkend="ucs-manual"/>, a profile-based installation of UCS is also possible.
		With this method, the settings for the <wordasword>Debian Installer</wordasword> and <wordasword>&ucsUSS;</wordasword> are specified in a pre-seed file.
	</para>

	<para>
		The Debian Installer consists of a number of special-purpose components to perform each installation task.
		Each component performs its task, asking the user questions as necessary to do its job.
		The questions themselves are given priorities, and the priority of questions to be asked is set when the installer is started.
	</para>

	<para>
		When a default installation is performed, only essential (<userinput>priority=high</userinput>) questions will be asked.
		This results in a highly automated installation process with little user interaction.
	</para>

	<para>
		If there is a problem, the user will see an error screen, and the installer menu may be shown in order to select some alternative action.
		Serious error notifications are set to <userinput>priority=critical</userinput> so the user will always be notified.
	</para>

	<para>
		Power users may be more comfortable with a menu-driven interface, where each step is controlled by the user rather than the installer performing each step automatically in sequence.
		To use the installer in a manual, menu-driven way, add the boot argument <userinput>priority=medium</userinput>.
	</para>

	<para>
		If your hardware requires you to pass options to kernel modules as they are installed, you will need to start the installer in <quote>expert</quote> mode.
		This can be done by adding the boot argument <userinput>priority=low</userinput>.
	</para>

	<para>
		Depending on the selected priority the installer will ask more or less questions.
		The installer will either use internal default values or the values from the profile.
		To perform the installation fully unattended all required answers must be provided through the installation profile.
		Therefore <userinput>priority=critical</userinput> should be specified under <guimenu>additional start options</guimenu> for UCS systems using the profile from <xref linkend="profile:example"/>.
	</para>

	<section id="profile:structure">
		<title>Structure of profile files</title>
		<para>
			An installation profile is a text file which can be edited with any editor.
			The file must use the UTF-8 character encoding.
			Empty lines and lines starting with a hash character (<literal>#</literal>) are ignored.
			All other lines should follow the four column layout required by <application>debconf</application>, which is fully described in <biblioref linkend="Debian:preseed"/>:
		</para>
		<programlisting>
<![CDATA[# Comment
<owner>	<question name>	<question type>	<value>]]>
		</programlisting>
		<para>
			The <wordasword>owner</wordasword> of most questions will be <literal>d-i</literal>, which is the <wordasword>Debian Installer</wordasword>.
			The <wordasword>question type</wordasword> depends on the questions and can be <literal>boolean</literal>, <literal>string</literal> or <literal>select</literal>.
			Any questions not answered by the pre-seed file is asked interactively and will prevent an unattended installation.
		</para>
	</section>

	<section id="profile:example">
		<title>Example installation profile</title>
		<para>
			A template file is provided as <filename>/usr/share/doc/univention-net-installer/examples/TEMPLATE</filename><footnote id="gzip"><simpara>
					The file may be stored compressed with the <filename class="extension">.gz</filename> extension.
					Use <command>gunzip</command> to uncompress a copy of that file.
			</simpara></footnote>.
			It contains the minimum required settings to perform a fully automatic installation of a &ucsMember; with no additional software.
			It will use the German keyboard layout and language settings.
			It will re-partition the hard-disk without asking any questions and will use LVM to manage the disk space.
			No additional software will be installed.
		</para>
		<programlisting linenumbering="numbered">
#
# This file overwrites /proc/cmdline overwrites preseed.cfg in the InitRamFs!
#

#
# The following options must be set through the PXE configuration <co id="preseed:pxe-co" linkends="preseed:pxe"/>
#
# Delay asking for locale and keyboard layout after pre-seeding via network
#d-i auto-install/enable boolean true
# Only ask for critical questions
#d-i debconf/priority select critical
# Disable graphical installer
#d-i debian-installer/framebuffer boolean false

# no live installer
d-i live-installer/enable boolean false

#
# Use interfaces with link
#
d-i netcfg/dhcp_timeout string 60

#
# Use dummy hostname and domain
#
d-i netcfg/get_hostname string unassigned-hostname
d-i netcfg/get_domain string unassigned-domain
krb5-config krb5-config/default_realm string UNASSIGNED-REALM
krb5-config krb5-config/kerberos_servers string localhost
krb5-config krb5-config/admin_server string localhost

#
# Select German as default locale and for keyboard layout <co id="preseed:locale-co" linkends="preseed:locale"/>
#
d-i debian-installer/locale string de_DE.UTF-8
d-i keyboard-configuration/xkb-keymap select de(nodeadkeys)
#d-i keyboard-configuration/modelcode string pc105
d-i ucr/xorg/keyboard/options/XkbModel string pc105
#d-i keyboard-configuration/layoutcode string de
d-i ucr/xorg/keyboard/options/XkbLayout string de
#d-i keyboard-configuration/variantcode string nodeadkeys
d-i ucr/xorg/keyboard/options/XkbVariant string nodeadkeys
#d-i keyboard-configuration/optionscode string
d-i ucr/xorg/keyboard/options/XkbOptions string
#d-i debian-installer/keymap select de-latin1-nodeadkeys

#
# Configure local repository server
#
d-i debian-installer/allow_unauthenticated boolean true
d-i mirror/country string manual
d-i mirror/protocol select http
d-i mirror/http/proxy string
# The host name of the repository server is filled through the PXE configuration generated by UDM
#d-i mirror/http/hostname string ... <co id="preseed:mirror-co" linkends="preseed:mirror"/>
d-i mirror/http/directory string /univention-repository/4.4/maintained/4.4-5 <co id="preseed:release-co" linkends="preseed:release"/>
d-i mirror/codename string ucs445
d-i mirror/suite string ucs445
d-i mirror/udeb/suite string ucs445

#
# Disable password for user 'root'
#
d-i passwd/root-login boolean true
# Alternative: printf "secret" | mkpasswd -s -m sha-512
d-i passwd/root-password-crypted string * <co id="preseed:password-co" linkends="preseed:password"/>
d-i passwd/make-user boolean false

#
# Partition hard disk: Use "lvm" and one big "/" partition <co id="preseed:partman-co" linkends="preseed:partman"/>
#
# Choices: lvm crypto regular
d-i partman-auto/method string lvm
# Choices: atomic home multi
d-i partman-auto/choose_recipe string atomic
d-i partman-auto/init_automatically_partition select 60some_device_lvm
d-i partman-auto/init_automatically_partition seen false
d-i partman-auto-lvm/new_vg_name string vg_ucs
d-i partman-lvm/device_remove_lvm boolean true
d-i partman-md/device_remove_md boolean true
d-i partman-lvm/confirm boolean true
d-i partman-lvm/confirm_nooverwrite boolean true
d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true

# Pre-select the standard UCS kernel
#d-i base-installer/kernel/image string linux-image-%(kernel_version)s
d-i base-installer/includes string less
d-i base-installer/debootstrap_script string /usr/share/debootstrap/scripts/sid

#
# Only minimal install
#
d-i apt-setup/use_mirror boolean false
d-i apt-setup/no_mirror boolean true
d-i apt-setup/services-select multiselect none
d-i apt-setup/cdrom/set-first boolean false
tasksel tasksel/first multiselect none
d-i pkgsel/include string univention-system-setup-boot univention-management-console-web-server univention-management-console-module-setup univention-kernel-image openssh-server
postfix postfix/main_mailer_type string No configuration
openssh-server ssh/disable_cr_auth boolean false
d-i ucf/changeprompt select keep_current
d-i pkgsel/upgrade select none
popularity-contest popularity-contest/participate boolean false

#
# Install GRUB in MBR by default on new systems
#
d-i grub-installer/only_debian boolean true
d-i grub-installer/bootdev string default
grub-pc grub-pc/install_devices multiselect
grub-pc grub-pc/install_devices_empty boolean true

#
# After installation
#
d-i finish-install/reboot_in_progress note
d-i cdrom-detect/eject boolean true

#
# Disable starting "Univention System Setup Boot" <co id="preseed:uss-co" linkends="preseed:uss"/>
#
d-i ucr/system/setup/boot/start string false

#
# Univention System Setup profile
#
#univention-system-setup-boot uss/root_password string
univention-system-setup-boot uss/components string
univention-system-setup-boot uss/packages_install string
univention-system-setup-boot uss/packages_remove string
# Choices: domaincontroller_master domaincontroller_backup domaincontroller_slave memberserver base
univention-system-setup-boot uss/server/role string memberserver
#univention-system-setup-boot uss/ldap/base string dc=example,dc=com
</programlisting>
		<calloutlist>
			<callout arearefs="preseed:pxe-co" id="preseed:pxe">
				<para>
					These settings must be configured as PXE command line parameters in <guimenu>additional start options</guimenu>.
					They are listed here for reference only and cannot be changed through this file:
				</para>
				<itemizedlist spacing="compact">
					<listitem><simpara>
						The parameter <varname>auto-install/enable</varname> is used to switch the order of some installer modules:
						The network should be configured and the <filename>preseed.cfg</filename> should be loaded <emphasis>before</emphasis> the first questions about the locale settings are asked.
					</simpara></listitem>
					<listitem><simpara>
						The parameter <varname>netcfg/choose_interface=auto</varname> tells the installer to use the same interface which was used for the PXE boot.
					</simpara></listitem>
					<listitem><simpara>
						Also some of those early questions are asked at priority level <literal>high</literal>.
						The priority level should be raised to <literal>critical</literal> to hide them.
					</simpara></listitem>
				</itemizedlist>
				<para>
					The long parameter names can be abbreviated as <literal> auto=true priority=critical interface=auto</literal>.
				</para>
			</callout>
			<callout arearefs="preseed:locale-co" id="preseed:locale">
				<para>
					If the locale settings are not consistent, the installer will ask interactively for corrections.
					The keyboard related settings must be configured through &ucsUCR; - the questions starting with <literal>keyboard-configuration/xkb-…</literal> will not work!
				</para>
			</callout>
			<callout arearefs="preseed:mirror-co" id="preseed:mirror">
				<para>
					The location of the local repository is filled in through the PXE configuration.
					By default the value of the &ucsUCRV; <envar>repository/online/server</envar> is used.
					It can be over-written by specifying the value here in the profile file.
					For use with the public repository specify <uri>updates.software-univention.de</uri> here.
				</para>
			</callout>
			<callout arearefs="preseed:release-co" id="preseed:release">
				<para>
					These directory and release names must be kept in sync to select the right UCS release.
					This example consistently uses <wordasword>UCS-4.4-5</wordasword>
					For use with the public repository remove the prefix <uri>univention-repository/</uri> here.
				</para>
			</callout>
			<callout arearefs="preseed:password-co" id="preseed:password">
				<para>
					By default no password is set, which will prevent logging in.
					It should be replaced by an encrypted password, which can be used by running a command like <command>printf "secret" | mkpasswd -s -m sha-512</command>
				</para>
			</callout>
			<callout arearefs="preseed:partman-co" id="preseed:partman">
				<para>
					By default all existing partitions will be wiped without asking any question!
					They will be replaced by a single file system for <filename class="directory">/</filename> using <acronym>LVM</acronym>.
					See <biblioref linkend="Debian:preseed"/> for more advanced partitioning schemas.
				</para>
			</callout>
			<callout arearefs="preseed:uss-co" id="preseed:uss">
				<para>
					This sections contains the UCS specific settings, which are normally configured through <wordasword>&ucsUSS;</wordasword>.
					For an unattended installation the graphical installer is disabled.
					All other values starting with <literal>uss/</literal> are copied to the installation profile.
					The variables are described in <xref linkend="profile:variables"/>.
				</para>
			</callout>
		</calloutlist>
	</section>

	<section id="profile:variables">
		<title>Overview of profile variables</title>

		<section id="profile:variables:system">
			<title>Profile variables - System properties</title>
			<para>
				The following profile variables can be used to specify basic properties of the computer such as the computer name, its role within the UCS domain and the name of the domain the computer should join.
			</para>

			<table>
				<title>Profile variables - System properties</title>
				<tgroup cols="2">
					<colspec colnum="1" colname="col1" colwidth="1*"/>
					<colspec colnum="2" colname="col2" colwidth="2*"/>
					<thead>
						<row>
							<entry>Name</entry>
							<entry>Function</entry>
						</row>
					</thead>
					<tbody>
						<row>
							<entry><varname>server/role</varname></entry>
							<entry>
								The system role.
								You may choose from <literal>domaincontroller_master</literal>, <literal>domaincontroller_backup</literal>, <literal>domaincontroller_slave</literal>, <literal>memberserver</literal> and <literal>base</literal>.
								The properties of the system roles are described in the domain services chapter of the <biblioref linkend="ucs-manual"/>.
							</entry>
						</row>
						<row>
							<entry><varname>hostname</varname></entry>
							<entry>
								The computer name.
								The name must only contain the letters <literal>a</literal> to <literal>z</literal> in lowercase, the figures <literal>0</literal> to <literal>9</literal> and hyphens.
								Although underscore are allowed as well, they should not be used as they are not supported everywhere.
								The name must begin with a letter.
							</entry>
						</row>
						<row>
							<entry><varname>domainname</varname></entry>
							<entry>
								The name of the DNS domain in which the computer is joined.
							</entry>
						</row>
						<row>
							<entry><varname>windows/domain</varname></entry>
							<entry>
								The name of the NetBIOS domain used by Samba.
								This variable should only by defined for the system role &ucsMaster;.
							</entry>
						</row>
						<row>
							<entry><varname>locales</varname></entry>
							<entry>
								Localization packages to be installed (locales).
								If more than one locale is specified, the locales are separated by blank spaces.
							</entry>
						</row>
						<row>
							<entry><varname>locale/default</varname></entry>
							<entry>
								The standard locale for the computer, e.g. <literal>en_GB.UTF-8:UTF-8</literal>.
								More information on system locales can be found at <biblioref linkend="locales"/>.
							</entry>
						</row>
						<row>
							<entry><varname>country</varname>, <varname>keymap</varname></entry>
							<entry>
								The keyboard layout for the computer, specified in the form of an X11
								<wordasword>keymap</wordasword> entry, e.g. <literal>de-latin1</literal>.
							</entry>
						</row>
						<row>
							<entry><varname>timezone</varname></entry>
							<entry>
								The time zone for the computer, e.g. <literal>Europe/Berlin</literal>.
								A complete list of possible configuration options is shown in the <emphasis>Basic settings</emphasis> module of the Univention Management Console.
							</entry>
						</row>
						<row>
							<entry><varname>root_password</varname></entry>
							<entry>
								The password for the <emphasis>root</emphasis> user for this computer.
								On a &ucsMaster;, this password is also used for the <emphasis>Administrator</emphasis>'s password.
							</entry>
						</row>
					</tbody>
				</tgroup>
			</table>
		</section>

		<section id="profile:variables:join">
			<title>Profile variables - LDAP settings and domain joins</title>
			<para>
				Automatically joining the computer into the domain is currently not supported for security reasons.
			</para>

			<table>
				<title>Profile variables - LDAP settings and domain joins</title>
				<tgroup cols="2">
					<colspec colnum="1" colname="col1" colwidth="1*"/>
					<colspec colnum="2" colname="col2" colwidth="2*"/>
					<thead>
						<row>
							<entry>Name</entry>
							<entry>Function</entry>
						</row>
					</thead>
					<tbody>
						<row>
							<entry><varname>start/join</varname></entry>
							<entry>
								As standard, all computers apart from the base system and &ucsMaster; attempt to join the UCS domain in the course of the installation.
								If this parameter is set to <literal>false</literal>, the automatic domain join is deactivated.
							</entry>
						</row>
						<row>
							<entry><varname>ldap/base</varname></entry>
							<entry>
								The base DN of the LDAP domain.
								In general, the base DN <uri>dc=example,dc=com</uri> is used in a domain <systemitem class="domainname">example.com</systemitem>.
								This variable is only evaluated on the system role &ucsMaster;.
							</entry>
						</row>
					</tbody>
				</tgroup>
			</table>
		</section>

		<section id="profile:variables:network">
			<title>Profile variables - Network configuration</title>
			<para>
				By default automatically installed systems use DHCP.
				The following profile variables can be used to specify the network configuration of the computer.
			</para>
			<para>
				General information on the network configuration and the use of the name servers can be found in Chapter <emphasis>Network configuration</emphasis> of the <biblioref linkend="ucs-manual"/>.
			</para>
			<para>
				The settings for network cards must be performed completely.
				It is not possible to leave individual settings blank.
				For example, if there is no IP address for the device <filename class="devicefile">eth0</filename> in the profile, in addition to the IP address, the <varname>interfaces/eth0/netmask</varname> will also be requested.
			</para>

			<table>
				<title>Profile variables - Network configuration</title>
				<tgroup cols="2">
					<colspec colnum="1" colname="col1" colwidth="1*"/>
					<colspec colnum="2" colname="col2" colwidth="2*"/>
					<thead>
						<row>
							<entry>Name</entry>
							<entry>Function</entry>
						</row>
					</thead>
					<tbody>
						<row>
							<entry><varname>interfaces/eth<replaceable>N</replaceable>/type</varname></entry>
							<entry>
								If this parameter is set to <literal>dynamic</literal> or <literal>dhcp</literal>, the network interface <filename class="devicefile">eth<replaceable>N</replaceable></filename> procures its network configuration via DHCP.
								The settings of <varname>interfaces/eth<replaceable>N</replaceable>/address</varname>, <varname>interfaces/eth<replaceable>N</replaceable>/netmask</varname>, <varname>interfaces/eth<replaceable>N</replaceable>/network</varname>, <varname>interfaces/eth<replaceable>N</replaceable>/broadcast</varname>, <varname>nameserver<replaceable>N</replaceable></varname> and <varname>gateway</varname> then become optional, but can still be used to over-write the configuration provided by DHCP.
								<!-- PMH: Actually DHCP is skipped as soon as _address and _netmask are given -->
								If no DHCP offer is received, a random IP address from the link-local network <literal>169.254.<replaceable>x.x</replaceable></literal> is used.
								For manual configuration this parameter must be set to <literal>static</literal>.
							</entry>
						</row>
						<row>
							<entry><varname>interfaces/eth<replaceable>N</replaceable>/address</varname></entry>
							<entry>
								The IPv4 address of the physical network interface <filename class="devicefile">eth<replaceable>N</replaceable></filename>.
							</entry>
						</row>
						<row>
							<entry><varname>interfaces/eth<replaceable>N</replaceable>/netmask</varname></entry>
							<entry>
								The network mask of the subnetwork from which the IPv4 address of <filename class="devicefile">eth<replaceable>N</replaceable></filename> originates.
							</entry>
						</row>
						<row>
							<entry><varname>gateway</varname></entry>
							<entry>
								The IPv4 address of the gateway which the computer should use as standard.
								Alternatively, one can specify the computer name or the FQDN that can be resolved into the IP address.
							</entry>
						</row>
						<row>
							<entry><varname>interfaces/eth<replaceable>N</replaceable>/ipv6/<replaceable>name</replaceable>/address</varname></entry>
							<entry>
								An IPv6 address of the physical network interface <filename class="devicefile">eth<replaceable>N</replaceable></filename> in static configuration.
								Multiple addresses can be assigned by using different <replaceable>name</replaceable> prefixes.
							</entry>
						</row>
						<row>
							<entry><varname>interfaces/eth<replaceable>N</replaceable>/ipv6/<replaceable>name</replaceable>/prefix</varname></entry>
							<entry>
								The prefix length of the IPv6 address of the physical network interface <filename class="devicefile">eth<replaceable>N</replaceable></filename> in static configuration.
							</entry>
						</row>
						<row>
							<entry><varname>ipv6/gateway</varname></entry>
							<entry>
								The IPv6 address of the gateway which the computer should use as standard.
								It is not obligatory to enter a gateway for IPv6, but recommended.
								An IPv6 gateway configured here has preference over router advertisements, which might otherwise be able to change the route.
							</entry>
						</row>
						<row>
							<entry><varname>interfaces/eth<replaceable>N</replaceable>/acceptRA</varname></entry>
							<entry>
								If this setting is set to <literal>yes</literal>, the stateless address auto-configuration (<acronym>SLAAC</acronym>) is used.
								In this, the IP address is assigned from the routers of the local network segment.
								If the variable is set to <literal>no</literal>, the configuration is performed statically via <varname>interfaces/eth<replaceable>N</replaceable>/ip6</varname> and <varname>interfaces/eth<replaceable>N</replaceable>/prefix6</varname> (see there).
							</entry>
						</row>
						<row>
							<entry><varname>nameserver1</varname>, <varname>nameserver2</varname>, <varname>nameserver3</varname></entry>
							<entry>
								The IP address of the name server which should perform the name resolution.
								It is possible to specify up to three name servers.
							</entry>
						</row>
						<row>
							<entry><varname>dns/forwarder1</varname>, <varname>dns/forwarder2</varname>, <varname>dns/forwarder3</varname></entry>
							<entry>
								The IP address of the name server intended to serve as the forwarder for a locally installed DNS service.
								It is possible to specify up to three forwarders.
							</entry>
						</row>
						<row>
							<entry><varname>proxy/http</varname></entry>
							<entry>
								The URL of a proxy server to be used when downloading accessing the Internet.
								The specified URL is adopted in the &ucsUCR; variables <envar>proxy/http</envar> and <envar>proxy/ftp</envar>.
								This setting is only required if packages are to be installed which download additional packages from external web servers; e.g., the installation program for the Flash plugin.
								<para>
									Example: <userinput>proxy/http="http://proxy.example.com:8080"</userinput>
								</para>
							</entry>
						</row>
					</tbody>
				</tgroup>
			</table>
		</section>

		<section id="profile:variables:software">
			<title>Profile variables - Software selection</title>
			<para>
				The following profile variables refer to software packages which are to be installed on the computer.
			</para>

			<table>
				<title>Profile variables - Software selection</title>
				<tgroup cols="2">
					<colspec colnum="1" colname="col1" colwidth="1*"/>
					<colspec colnum="2" colname="col2" colwidth="2*"/>
					<thead>
						<row>
							<entry>Name</entry>
							<entry>Function</entry>
						</row>
					</thead>
					<tbody>
						<row>
							<entry><varname>packages_install</varname></entry>
							<entry>
								This settings names packages which are additionally installed.
								If more than one package is specified, the packages are separated by blank spaces.
							</entry>
						</row>
						<row>
							<entry><varname>packages_remove</varname></entry>
							<entry>
								This settings names packages which should be removed.
								If more than one package is specified, the packages are separated by blank spaces.
							</entry>
						</row>
					</tbody>
				</tgroup>
			</table>
		</section>

		<section id="profile:variables:ssl">
			<title>Profile variables - SSL</title>
			<para>
				A SSL certification infrastructure is set up during installation of a &ucsMaster;.
				If no settings are configured, automatic names are given for the certificate.
			</para>

			<table>
				<title>Profile variables - SSL</title>
				<tgroup cols="2">
					<colspec colnum="1" colname="col1" colwidth="1*"/>
					<colspec colnum="2" colname="col2" colwidth="2*"/>
					<thead>
						<row>
							<entry>Name</entry>
							<entry>Function</entry>
						</row>
					</thead>
					<tbody>
						<row>
							<entry><varname>ssl/country</varname></entry>
							<entry>
								The ISO country code of the certification body appearing in the certificate (root CA), specified with two capital letters.
							</entry>
						</row>
						<row>
							<entry><varname>ssl/state</varname></entry>
							<entry>
								The region, county or province that appears in the certificate of the root CA.
							</entry>
						</row>
						<row>
							<entry><varname>ssl/locality</varname></entry>
							<entry>
								Place appearing in the certificate of the root CA.
							</entry>
						</row>
						<row>
							<entry><varname>ssl/organization</varname></entry>
							<entry>
								Name of the organization that appears in the certificate of the root CA.
							</entry>
						</row>
						<row>
							<entry><varname>ssl/organizationalunit</varname></entry>
							<entry>
								Name of the organizational unit or department of the organization that appears in the certificate of the root CA.
							</entry>
						</row>
						<row>
							<entry><varname>ssl/email</varname></entry>
							<entry>
								E-mail address that appears in the certificate of the root CA.
							</entry>
						</row>
					</tbody>
				</tgroup>
			</table>
		</section>
	</section>

	<section id="profile:netinstaller">
		<title>Network-based PXE installations with Univention Net Installer</title>
		<para>
			Network-based, profile-based installations via PXE are performed with the Univention Net Installer, which can be set up using the package <package>univention-net-installer</package>.
			In addition, DHCP, TFTP and WWW servers are required.
			If the DHCP server and the PXE server of the Univention Net Installer are operated on separate systems, the PXE server must be assigned via a DHCP boot policy.
		</para>
		<note>
			<para>
				The installation process consists of multiple steps, which contact different services and servers:
			</para>
			<orderedlist>
				<listitem>
					<simpara>
						First the <emphasis>DHCP server</emphasis> is contacted.
						It sends the client to the <guimenu>Boot server</guimenu> (by default the DHCP server itself) configured through the <emphasis>DHCP Boot</emphasis> policy to request the boot loader given in <guimenu>Boot filename</guimenu> (<filename>pxelinux.0</filename>).
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Then the client downloads the boot loader via the <systemitem class="protocol">tftp</systemitem> protocol from the <emphasis>PXE server</emphasis>.
						The boot loader scans the server for the client configuration file in <filename class="directory">pxelinux.cfg/</filename>.
						The referenced Linux kernel (<filename>linux</filename>) and initial RAM disk file (<filename>initrd.gz</filename>) are then downloaded.
						Those names can be changed through the &ucsUCRV;s <envar>pxe/installer/kernel</envar> and <envar>pxe/installer/initrd</envar><footnote id="http"><simpara>Newer versions of the PXE boot loader support downloading through <systemitem class="protocol">http</systemitem>, which can be faster and more reliable in certain environments. This can be enabled by specifying URLs starting with <uri>http://</uri> as file names.</simpara></footnote>.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Finally the UCS installer downloads the profiles and package files using <systemitem class="protocol">http</systemitem>.
						The <guimenu>Name of the installation profile</guimenu> is configured in the computer entry in LDAP.
						The file is fetch from the <emphasis>PXE server</emphasis> by default, but the prefix can be overwritten through the &ucsUCRV; <envar>pxe/installer/profiles</envar>.
						As an alternative the name can also be specified as an absolute URL.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						The package files are fetched from the <emphasis>repository server</emphasis>, which is configured through the &ucsUCRV; <envar>repository/online/server</envar> on the PXE server.
					</simpara>
				</listitem>
			</orderedlist>
		</note>
		<para>
			Univention Net Installer supports both the interactive and profile-based installation.
			Any questions not answered in the pre-seed file forces the installer to interactive mode.
		</para>
		<para>
			Profiles should be copied into the directory <filename class="directory">/var/lib/univention-client-boot/preseed/</filename> on the PXE server, which is accessible through <uri>http://<replaceable>HOST-NAME</replaceable>/univention-client-boot/preseed/</uri>.
		</para>
		<para>
			Univention Net Installer can either directly use the repository server <ulink url="https://updates.software-univention.de/"/> or a local repository server.
			The later one is advisable as it reduces the amount of data needing to be downloaded for each installation.
		</para>

		<section id="profile:netinstaller:local">
			<title>Local repository</title>
		<para>
			The local repository must be initialized using the DVD (image) of the targeted UCS release.
			This is done by running the command <command>univention-repository-create</command>, which copies the corresponding PXE kernel and installer to <filename class="directory">/var/lib/univention-client-boot/installer/<replaceable>release</replaceable>/</filename>.
		</para>
		<para>
			It is safe to run <command>univention-repository-create</command> again, which is for example required to update the installer to a newer version of UCS.
			For more information on local repositories see the software deployment chapter of the <biblioref linkend="ucs-manual"/>.
		</para>
		<important>
			<para>
				Afterwards the repository must be updated at least once using the command <command>univention-repository-update net</command>.
				This is required as the DVD does not contain the <filename>Release</filename> files and their cryptographic signatures.
			</para>
			<para>
				The command will download all previous UCS minor and patch-level releases of the same major branch.
				Each minor release requires several gigabytes of storage space in <filename class="directory">/var/lib/univention-repository/</filename>.
				Even more space is required if the section <emphasis>unmaintained</emphasis> is enabled!
			</para>
			<para>
				Verify the &ucsUCRV; <envar>repository/mirror/recreate_packages</envar> is set to <literal>no</literal>.
				Otherwise the <filename>Packages</filename> files will be re-built, which invalidates the cryptographic signatures.
				Locally re-built index files will also have different package priorities as the <emphasis>overwrite</emphasis> information is not publicly available.
			</para>
		</important>
		</section>

		<section id="profile:netinstaller:public">
			<title>Public repository</title>
			<para>
				Even when the public repository server <ulink url="https://updates.software-univention.de/"/> is used, some services and files must be available inside the local network.
				At minimum this includes the <systemitem class="service">DHCP</systemitem> service, which assigns the client its IP address and tells it to continue fetching files from the next server.
				Historically this had to be a <systemitem class="service">TFTP</systemitem> server, but nowadays this also can be any <systemitem class="service">HTTP</systemitem> server.
				This has the benefit that <systemitem class="service">HTTP</systemitem> is faster, more reliable and also works over the Internet.
			</para>
			<procedure id="profile:netinstaller:public:proc">
				<title>Setup network installation using public repository</title>
				<step>
					<para>
						Install the <systemitem class="service">HTTP</systemitem> capable boot loader <filename>lpxelinux.0</filename>
					</para>
					<programlisting language="sh">
univention-install univention-dhcp univention-net-installer
ln -s /usr/lib/PXELINUX/lpxelinux.0 \
	/var/lib/univention-client-boot/
					</programlisting>
				</step>
				<step>
					<para>
						Setup the <emphasis>DHCP Boot</emphasis> policy to use <filename>lpxelinux.0</filename>.
						Depending on the capabilities of the network card boot code the boot loader can either be fetched over the <systemitem class="service">HTTP</systemitem> or <systemitem class="service">TFTP</systemitem> protocol:
					</para>
					<stepalternatives>
						<step>
							<substeps>
								<step>
									<para>
										For <systemitem class="service">HTTP</systemitem> configure the absolute URL as the <property>boot filename</property>:
									</para>
									<programlisting language="sh">
HOST="$(hostname -f)"
LDAP="$(ucr get ldap/base)"
HTTP="http://$HOST/univention-client-boot/lpxelinux.0"
udm policies/dhcp_boot modify \
	--dn "cn=default-settings,cn=boot,cn=dhcp,cn=policies,$LDAP" \
	--set boot_filename="$HTTP" \
	--set boot_server=
									</programlisting>
								</step>
								<step>
									<para>
										The installer performs its own second DHCP request.
										This again retrieves the DHCP option <property>boot filename</property>, which now contains the <emphasis>URL</emphasis> to the PXE loader.
										The installer wrongly interprets this as the URL for the profile <filename>preseed</filename>, which breaks the installation.
										Therefore the option needs to be overwritten when the installer performs this second query:
									</para>
									<programlisting language="sh">
STMT='if substring (option vendor-class-identifier, 0, 3) = "d-i" { filename ""; }'
udm dhcp/subnet list |
	sed -ne 's/^DN: //p' |
	xargs -d '\n' -n1 udm dhcp/subnet modify \
		--option options \
		--append statements="$STMT" \
		--dn
									</programlisting>
								</step>
							</substeps>
						</step>
						<step>
							<para>
								For <systemitem class="service">TFTP</systemitem> change <property>boot filename</property> to point to <filename>lpxelinux.0</filename>:
							</para>
							<programlisting language="sh">
HOST="$(hostname -f)"
LDAP="$(ucr get ldap/base)"
udm policies/dhcp_boot modify \
	--dn "cn=default-settings,cn=boot,cn=dhcp,cn=policies,$LDAP" \
	--set boot_filename='lpxelinux.0' \
	--set boot_server="$HOST"
							</programlisting>
						</step>
					</stepalternatives>
				</step>
				<step>
					<para>
						Configure the boot loader to load the Linux kernel and initial ram disk from the public repository server:
					</para>
					<programlisting language="sh">
PXE='http://updates.software-univention.de/pxe'
PXE="$PXE/4.4-5/amd64/gtk/debian-installer/amd64"
ucr set \
	pxe/installer/kernel="$PXE/linux" \
	pxe/installer/initrd="$PXE/initrd.gz" \
	pxe/installer/ipappend=3
					</programlisting>
				</step>
				<step>
					<para>
						In the profile file the settings for <property>mirror/http/hostname</property> and <property>mirror/http/directory</property> must be changed to use the public server and its layout:
					</para>
					<programlisting>
d-i mirror/http/hostname string updates.software-univention.de <co id="preseed:mirror-public-co" linkends="preseed:mirror"/>
d-i mirror/http/directory string /4.4/maintained/4.4-5 <co id="preseed:release-public-co" linkends="preseed:release"/>
						</programlisting>
				</step>
			</procedure>
		</section>

		<section id="profile:assign">
			<title>Assignment of a computer for automatic installation</title>
			<para>
				A computer to be installed via Univention Net Installer must firstly be registered in the computer management of the &ucsUMC;.
				The following values must be set as a minimum:
			</para>

			<itemizedlist>
				<listitem><simpara>Hostname (General tab)</simpara></listitem>
				<listitem><simpara>MAC address (General tab)</simpara></listitem>
				<listitem><simpara>IP address (General tab)</simpara></listitem>
				<listitem><simpara>DNS forward and reverse zone entries (General tab)</simpara></listitem>
				<listitem><simpara>DHCP service entry (General tab)</simpara></listitem>
			</itemizedlist>
			<para>
				The <guimenu>(Re-)install on next boot</guimenu> option must now be activated in the <guimenu>Advanced settings</guimenu> tab under <guimenu>Deployment</guimenu>.
			</para>
			<para>
				The name of the installation profile relative to <filename class="directory">/var/lib/univention-client-boot/preseed/</filename> can be entered under <guimenu>Name of installation profile</guimenu>.
				As an alternative any other <systemitem class="protocol">http</systemitem> server can be used as well, in which case an absolute URL must be given.
			</para>
			<para>
				Options entered under <guimenu>additional start options</guimenu> are passed on to the kernel in network-based installations, e.g., for the deactivation of ACPI during system start.
				This can also be used to specify other pre-seed variables on a host-by-host basis.
				To perform an installation fully unattended see the <link linkend="preseed:pxe">explanations for the installation profile</link> for a list of required options.
			</para>
			<para>
				A PXE configuration file is created for every computer object under <filename class="directory">/var/lib/univention-client-boot/pxelinux.cfg/</filename>.
			</para>
			<tip>
				<para>
					Several &ucsUCRV; exist on the PXE server, which can be used to further customize the PXE configuration.
					Use <command>ucr search ^pxe/</command> to get a list of them including a short description.
					Those values will only be used when next a PXE configuration file is generated.
				</para>
			</tip>
			<para>
				It must be verified that the boot order in BIOS of the system to be installed prefers a PXE network boot over hard disks or CD-ROMs.
			</para>
			<para>
				On the next restart of the computer it will boot via PXE and is installed via the network.
			</para>
			<para>
				By default the <guimenu>(Re-)install on next boot</guimenu> option needs to be reset manually after the installation has finished.
				Otherwise the computer will be reinstalled every time the host is booted!
				If the package <package>univention-net-installer-daemon</package> is installed on the server, the flag can be reset automatically.
			</para>
		</section>

	</section>

</chapter>

<bibliography id="bibliography">
	<bibliomixed id="ucs-manual"/>
	<bibliomixed id="locales"/>
	<biblioentry id="Debian:preseed">
		<abbrev lang="">d-i</abbrev>
		<publishername>Debian Project</publishername>
		<pubdate>2017</pubdate>
		<title>Debian Installer - <ulink url="https://www.debian.org/releases/stretch/amd64/apb.html">Automating the installation using pre-seeding</ulink></title>
	</biblioentry>
</bibliography>
</book>
<!-- vim:set ts=2 sw=2 noet: -->
